Total: 30.68s
ROUTINE ======================== primitives_performance.Benchmark_ChannelBasedPool in /Users/alexsandergomes/Documents/experiments/golang_primitives/bench_test.go
         0       10ms (flat, cum) 0.033% of Total
         .          .     41:func Benchmark_ChannelBasedPool(b *testing.B) {
         .          .     42:	debug.SetGCPercent(-1)
         .          .     43:	b.ReportAllocs()
         .          .     44:
         .          .     45:	pool := NewChannelBasedPool(1000, testAllocator, testCleaner)
         .          .     46:
         .          .     47:	b.ResetTimer()
         .       10ms     48:	b.RunParallel(func(pb *testing.PB) {
         .          .     49:		for pb.Next() {
         .          .     50:			obj := pool.Get()
         .          .     51:			pool.Put(obj)
         .          .     52:		}
         .          .     53:	})
ROUTINE ======================== primitives_performance.Benchmark_ChannelBasedPool.func1 in /Users/alexsandergomes/Documents/experiments/golang_primitives/bench_test.go
         0     30.63s (flat, cum) 99.84% of Total
         .          .     48:	b.RunParallel(func(pb *testing.PB) {
         .          .     49:		for pb.Next() {
         .     15.19s     50:			obj := pool.Get()
         .     15.44s     51:			pool.Put(obj)
         .          .     52:		}
         .          .     53:	})
         .          .     54:}
         .          .     55:
         .          .     56:// Benchmark: Atomic-based pool
