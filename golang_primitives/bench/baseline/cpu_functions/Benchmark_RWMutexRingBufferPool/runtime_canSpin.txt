Total: 48.01s
ROUTINE ======================== internal/sync.runtime_canSpin in /opt/homebrew/Cellar/go/1.24.3/libexec/src/runtime/proc.go
      70ms       70ms (flat, cum)  0.15% of Total
         .          .   7188:func internal_sync_runtime_canSpin(i int) bool {
         .          .   7189:	// sync.Mutex is cooperative, so we are conservative with spinning.
         .          .   7190:	// Spin only few times and only if running on a multicore machine and
         .          .   7191:	// GOMAXPROCS>1 and there is at least one other running P and local runq is empty.
         .          .   7192:	// As opposed to runtime mutex we don't do passive spinning here,
         .          .   7193:	// because there can be work on global runq or on other Ps.
      20ms       20ms   7194:	if i >= active_spin || ncpu <= 1 || gomaxprocs <= sched.npidle.Load()+sched.nmspinning.Load()+1 {
      10ms       10ms   7195:		return false
         .          .   7196:	}
      10ms       10ms   7197:	if p := getg().m.p.ptr(); !runqempty(p) {
      20ms       20ms   7198:		return false
         .          .   7199:	}
      10ms       10ms   7200:	return true
         .          .   7201:}
         .          .   7202:
         .          .   7203://go:linkname internal_sync_runtime_doSpin internal/sync.runtime_doSpin
         .          .   7204://go:nosplit
         .          .   7205:func internal_sync_runtime_doSpin() {
