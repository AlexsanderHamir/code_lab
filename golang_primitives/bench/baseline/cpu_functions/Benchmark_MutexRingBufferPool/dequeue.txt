Total: 52.53s
ROUTINE ======================== runtime.(*semaRoot).dequeue in /opt/homebrew/Cellar/go/1.24.3/libexec/src/runtime/sema.go
      50ms       70ms (flat, cum)  0.13% of Total
         .          .    393:func (root *semaRoot) dequeue(addr *uint32) (found *sudog, now, tailtime int64) {
         .          .    394:	ps := &root.treap
         .          .    395:	s := *ps
      30ms       30ms    396:	for ; s != nil; s = *ps {
         .          .    397:		if s.elem == unsafe.Pointer(addr) {
         .          .    398:			goto Found
         .          .    399:		}
         .          .    400:		if uintptr(unsafe.Pointer(addr)) < uintptr(s.elem) {
         .          .    401:			ps = &s.prev
         .          .    402:		} else {
         .          .    403:			ps = &s.next
         .          .    404:		}
         .          .    405:	}
         .          .    406:	return nil, 0, 0
         .          .    407:
         .          .    408:Found:
         .          .    409:	now = int64(0)
         .          .    410:	if s.acquiretime != 0 {
         .       20ms    411:		now = cputicks()
         .          .    412:	}
         .          .    413:	if t := s.waitlink; t != nil {
         .          .    414:		// Substitute t, also waiting on addr, for s in root tree of unique addrs.
         .          .    415:		*ps = t
         .          .    416:		t.ticket = s.ticket
         .          .    417:		t.parent = s.parent
         .          .    418:		t.prev = s.prev
         .          .    419:		if t.prev != nil {
         .          .    420:			t.prev.parent = t
         .          .    421:		}
         .          .    422:		t.next = s.next
         .          .    423:		if t.next != nil {
         .          .    424:			t.next.parent = t
         .          .    425:		}
         .          .    426:		if t.waitlink != nil {
         .          .    427:			t.waittail = s.waittail
         .          .    428:		} else {
      10ms       10ms    429:			t.waittail = nil
         .          .    430:		}
         .          .    431:		t.waiters = s.waiters
         .          .    432:		if t.waiters > 1 {
         .          .    433:			t.waiters--
         .          .    434:		}
         .          .    435:		// Set head and tail acquire time to 'now',
         .          .    436:		// because the caller will take care of charging
         .          .    437:		// the delays before now for all entries in the list.
      10ms       10ms    438:		t.acquiretime = now
         .          .    439:		tailtime = s.waittail.acquiretime
         .          .    440:		s.waittail.acquiretime = now
         .          .    441:		s.waitlink = nil
         .          .    442:		s.waittail = nil
         .          .    443:	} else {
