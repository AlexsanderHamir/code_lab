Total: 52.38s
ROUTINE ======================== testing.(*PB).Next in /opt/homebrew/Cellar/go/1.24.3/libexec/src/testing/benchmark.go
      30ms       30ms (flat, cum) 0.057% of Total
         .          .    902:func (pb *PB) Next() bool {
      10ms       10ms    903:	if pb.cache == 0 {
      10ms       10ms    904:		n := pb.globalN.Add(pb.grain)
         .          .    905:		if n <= pb.bN {
         .          .    906:			pb.cache = pb.grain
         .          .    907:		} else if n < pb.bN+pb.grain {
         .          .    908:			pb.cache = pb.bN + pb.grain - n
         .          .    909:		} else {
         .          .    910:			return false
         .          .    911:		}
         .          .    912:	}
      10ms       10ms    913:	pb.cache--
         .          .    914:	return true
         .          .    915:}
         .          .    916:
         .          .    917:// RunParallel runs a benchmark in parallel.
         .          .    918:// It creates multiple goroutines and distributes b.N iterations among them.
